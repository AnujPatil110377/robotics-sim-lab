networks:
  rdpnet:
    name: rdpnet
    driver: bridge

services:

  traefik:
    image: traefik:v2.11
    command:
      - --entrypoints.web.address=:80
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=rdpnet
      - --api.dashboard=true
      - --api.insecure=true
      - --log.level=DEBUG
      - --accesslog=true
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - rdpnet
    restart: unless-stopped

  backend:
    build:
      context: ..
      dockerfile: backend/Dockerfile
    image: deploy-backend
    environment:
      - USE_TRAEFIK=1
      - DOCKER_NETWORK=rdpnet
      - PORT=3001
    labels:
      - traefik.enable=true
      - traefik.http.routers.portal.entrypoints=web
      - traefik.http.routers.portal.rule=PathPrefix(`/`)
      - traefik.http.routers.portal.service=portal
      - traefik.http.services.portal.loadbalancer.server.port=3001
      - traefik.docker.network=rdpnet
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # If you build the frontend locally, mount the build output so Traefik serves the new UI
      # The compose file lives in deploy/, so the repo-root frontend build is ../<folder>/build
      - ../Admin Dashboard UI Design/build:/app/backend/public:ro
    ports:
      - "3001:3001"   # Optional for direct API access
    networks:
      - rdpnet
    depends_on:
      - traefik
    restart: unless-stopped
